version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: api-timeout-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ApiTimeoutHandler
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - api-timeout-network

  # Zookeeper (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: api-timeout-zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - api-timeout-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: api-timeout-kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
      - "9094:9094"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - api-timeout-network

  # Kafka UI (optional - for monitoring)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: api-timeout-kafka-ui
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - api-timeout-network

  # MongoDB Express (optional - for MongoDB management)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: api-timeout-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    networks:
      - api-timeout-network

  # API Application (optional - for containerized deployment)
  api-timeout-handler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api-timeout-handler-app
    restart: unless-stopped
    ports:
      - "5000:8080"
      - "5001:8081"
    depends_on:
      - mongodb
      - kafka
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:8080;https://+:8081
      MongoDb__ConnectionString: mongodb://admin:password123@mongodb:27017
      Kafka__BootstrapServers: kafka:29092
    networks:
      - api-timeout-network
    profiles:
      - app

volumes:
  mongodb_data:
    driver: local
  kafka_data:
    driver: local

networks:
  api-timeout-network:
    driver: bridge